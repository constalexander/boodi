{
  "version": 3,
  "sources": ["../../../../../apps/api/src/services/supabase.service.ts"],
  "sourcesContent": ["import { createClient } from '@supabase/supabase-js';\r\nimport config from '../configs/app.config.js';\r\nimport { Config } from '../models/app-config.type.js';\r\n\r\nexport const supabase = createClient(\r\n  config.supabase.url,\r\n  config.supabase.serviceRoleKey\r\n);\r\n\r\nexport const fetchPrompt = async (name: any) => {\r\n  try {\r\n    const { data, error } = await supabase\r\n      .from('prompts')\r\n      .select('*')\r\n      .eq('name', name);\r\n    if (error) throw error;\r\n\r\n    return data[0]?.value;\r\n  } catch (error: any) {\r\n    console.error('Error fetching prompts:', error.message);\r\n  }\r\n};\r\n\r\nexport const loadPromptsIntoConfig = async () => {\r\n  for (const p in config.prompts) {\r\n    const v = await fetchPrompt(p as keyof Config['prompts']);\r\n    if (!v) throw new Error(`Prompt for ${p} not found.`);\r\n    config.prompts[p] = v;\r\n  }\r\n};\r\n\r\nexport const saveInteraction = async (\r\n  endpoint: string,\r\n  input: string,\r\n  output: string,\r\n  totalTokens: number,\r\n  userUUID?: string\r\n) => {\r\n  const values = {\r\n    endpoint,\r\n    user_input: input,\r\n    boodi_output: output,\r\n    totalTokens: totalTokens,\r\n    user_uuid: userUUID || null,\r\n  };\r\n  const { error } = await supabase.from('interactions').insert(values);\r\n\r\n  if (error) {\r\n    console.error('Error saving interaction:', error);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA6B;AAC7B,wBAAmB;AAGZ,MAAM,eAAW;AAAA,EACtB,kBAAAA,QAAO,SAAS;AAAA,EAChB,kBAAAA,QAAO,SAAS;AAClB;AAEO,MAAM,cAAc,OAAO,SAAc;AAC9C,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,SAC3B,KAAK,SAAS,EACd,OAAO,GAAG,EACV,GAAG,QAAQ,IAAI;AAClB,QAAI;AAAO,YAAM;AAEjB,WAAO,KAAK,CAAC,GAAG;AAAA,EAClB,SAAS,OAAY;AACnB,YAAQ,MAAM,2BAA2B,MAAM,OAAO;AAAA,EACxD;AACF;AAEO,MAAM,wBAAwB,YAAY;AAC/C,aAAW,KAAK,kBAAAA,QAAO,SAAS;AAC9B,UAAM,IAAI,MAAM,YAAY,CAA4B;AACxD,QAAI,CAAC;AAAG,YAAM,IAAI,MAAM,cAAc,CAAC,aAAa;AACpD,sBAAAA,QAAO,QAAQ,CAAC,IAAI;AAAA,EACtB;AACF;AAEO,MAAM,kBAAkB,OAC7B,UACA,OACA,QACA,aACA,aACG;AACH,QAAM,SAAS;AAAA,IACb;AAAA,IACA,YAAY;AAAA,IACZ,cAAc;AAAA,IACd;AAAA,IACA,WAAW,YAAY;AAAA,EACzB;AACA,QAAM,EAAE,MAAM,IAAI,MAAM,SAAS,KAAK,cAAc,EAAE,OAAO,MAAM;AAEnE,MAAI,OAAO;AACT,YAAQ,MAAM,6BAA6B,KAAK;AAChD,WAAO;AAAA,EACT;AACA,SAAO;AACT;",
  "names": ["config"]
}
