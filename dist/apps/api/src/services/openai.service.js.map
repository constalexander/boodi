{
  "version": 3,
  "sources": ["../../../../../apps/api/src/services/openai.service.ts"],
  "sourcesContent": ["import OpenAI from 'openai';\r\nimport { Stream } from 'openai/streaming.mjs';\r\nimport { ChatCompletionChunk } from 'openai/resources/index.mjs';\r\nimport {\r\n  ChatCompletionCreateParamsNonStreaming,\r\n  ChatCompletionCreateParamsStreaming,\r\n} from 'openai/resources/index.mjs';\r\nimport config from '../configs/app.config.js';\r\n\r\nexport const ai = new OpenAI({\r\n  apiKey: config.openai.key,\r\n});\r\n\r\nexport const getStreamingCompletion = async (\r\n  extraParams: any\r\n): Promise<Stream<ChatCompletionChunk>> => {\r\n  const params: ChatCompletionCreateParamsStreaming = {\r\n    ...defaultParamsStreaming,\r\n    ...extraParams,\r\n    messages: [...defaultParamsStreaming.messages, ...extraParams.messages],\r\n  };\r\n\r\n  const completion = await ai.chat.completions.create(params);\r\n  return completion;\r\n};\r\n\r\nexport const defaultParamsNonStreaming: ChatCompletionCreateParamsNonStreaming =\r\n  {\r\n    model: config.openai.model,\r\n    temperature: 0.5,\r\n    max_tokens: Number(config.openai.max_tokens_1),\r\n    messages: [\r\n      {\r\n        role: 'system',\r\n        content: config.prompts.initBoodi,\r\n      },\r\n    ],\r\n  };\r\n\r\nexport const defaultParamsStreaming: ChatCompletionCreateParamsStreaming = {\r\n  ...defaultParamsNonStreaming,\r\n  stream: true,\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmB;AAOnB,wBAAmB;AAEZ,MAAM,KAAK,IAAI,cAAAA,QAAO;AAAA,EAC3B,QAAQ,kBAAAC,QAAO,OAAO;AACxB,CAAC;AAEM,MAAM,yBAAyB,OACpC,gBACyC;AACzC,QAAM,SAA8C;AAAA,IAClD,GAAG;AAAA,IACH,GAAG;AAAA,IACH,UAAU,CAAC,GAAG,uBAAuB,UAAU,GAAG,YAAY,QAAQ;AAAA,EACxE;AAEA,QAAM,aAAa,MAAM,GAAG,KAAK,YAAY,OAAO,MAAM;AAC1D,SAAO;AACT;AAEO,MAAM,4BACX;AAAA,EACE,OAAO,kBAAAA,QAAO,OAAO;AAAA,EACrB,aAAa;AAAA,EACb,YAAY,OAAO,kBAAAA,QAAO,OAAO,YAAY;AAAA,EAC7C,UAAU;AAAA,IACR;AAAA,MACE,MAAM;AAAA,MACN,SAAS,kBAAAA,QAAO,QAAQ;AAAA,IAC1B;AAAA,EACF;AACF;AAEK,MAAM,yBAA8D;AAAA,EACzE,GAAG;AAAA,EACH,QAAQ;AACV;",
  "names": ["OpenAI", "config"]
}
