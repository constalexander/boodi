{
  "version": 3,
  "sources": ["../../../../../apps/api/src/controllers/zero-shot-wisdom.controller.ts"],
  "sourcesContent": ["import { NextFunction, Request, Response } from \"express\";\nimport { Stream } from \"openai/streaming.mjs\";\nimport { ChatCompletionChunk } from \"openai/resources/index.mjs\";\nimport config from \"../configs/app.config.js\";\nimport { saveInteraction } from \"../services/supabase.service.js\";\nimport { getStreamingCompletion } from \"../services/openai.service.js\";\n\nexport const ask = async (req: Request, res: Response, next: NextFunction) => {\n  if (!req.ws) return;\n  const ws = await req.ws();\n\n  ws.on(\"error\", console.error);\n\n  ws.on(\"message\", (msg: string) => {\n    const msgObj = JSON.parse(msg);\n\n    const startStream = async (message: string) => {\n      const params = {\n        messages: [\n          {\n            role: \"system\",\n            content: config.prompts.zeroShotWisdom,\n          },\n          {\n            role: \"user\",\n            content: message,\n          },\n        ],\n        max_tokens: 512,\n      };\n\n      const stream: Stream<ChatCompletionChunk> = await getStreamingCompletion(\n        params\n      );\n\n      let output = \"\";\n      for await (const chunk of stream) {\n        const token = chunk.choices[0]?.delta.content || \"\";\n        output += token;\n\n        ws.send(token);\n      }\n\n      ws.close();\n\n      await saveInteraction(\n        \"/zero-shot-wisdom\",\n        message,\n        output,\n        msgObj.userUUID\n      );\n    };\n\n    startStream(msgObj.inputText);\n  });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,wBAAmB;AACnB,8BAAgC;AAChC,4BAAuC;AAEhC,MAAM,MAAM,OAAO,KAAc,KAAe,SAAuB;AAC5E,MAAI,CAAC,IAAI;AAAI;AACb,QAAM,KAAK,MAAM,IAAI,GAAG;AAExB,KAAG,GAAG,SAAS,QAAQ,KAAK;AAE5B,KAAG,GAAG,WAAW,CAAC,QAAgB;AAChC,UAAM,SAAS,KAAK,MAAM,GAAG;AAE7B,UAAM,cAAc,OAAO,YAAoB;AAC7C,YAAM,SAAS;AAAA,QACb,UAAU;AAAA,UACR;AAAA,YACE,MAAM;AAAA,YACN,SAAS,kBAAAA,QAAO,QAAQ;AAAA,UAC1B;AAAA,UACA;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,UACX;AAAA,QACF;AAAA,QACA,YAAY;AAAA,MACd;AAEA,YAAM,SAAsC,UAAM;AAAA,QAChD;AAAA,MACF;AAEA,UAAI,SAAS;AACb,uBAAiB,SAAS,QAAQ;AAChC,cAAM,QAAQ,MAAM,QAAQ,CAAC,GAAG,MAAM,WAAW;AACjD,kBAAU;AAEV,WAAG,KAAK,KAAK;AAAA,MACf;AAEA,SAAG,MAAM;AAET,gBAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA;AAAA,QACA,OAAO;AAAA,MACT;AAAA,IACF;AAEA,gBAAY,OAAO,SAAS;AAAA,EAC9B,CAAC;AACH;",
  "names": ["config"]
}
