{
  "version": 3,
  "sources": ["../../../../../../../apps/api/src/controllers/tts.controller.ts"],
  "sourcesContent": ["import fs from 'fs';\r\nimport path from 'path';\r\nimport { NextFunction, Request, Response } from 'express';\r\nimport { Stream } from 'openai/streaming.mjs';\r\nimport { ChatCompletionChunk } from 'openai/resources/index.mjs';\r\nimport config from '../configs/app.config.js';\r\nimport { saveInteraction } from '../services/supabase.service.js';\r\nimport { ai, getStreamingCompletion } from '../services/openai.service.js';\r\n\r\nexport const tts = async (req: Request, res: Response, next: NextFunction) => {\r\n  //return; // wip\r\n  const speechFile = path.resolve('./speech.mp3');\r\n\r\n  async function main() {\r\n    const mp3 = await (ai.audio as any).speech.create({\r\n      model: 'tts-1-hd',\r\n      voice: 'onyx',\r\n      input: `Take. Rest. Take. Rest.`,\r\n    });\r\n    console.log(speechFile);\r\n    const buffer = Buffer.from(await mp3.arrayBuffer());\r\n    await fs.promises.writeFile(speechFile, buffer);\r\n  }\r\n  main();\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,kBAAiB;AAMjB,4BAA2C;AAEpC,MAAM,MAAM,OAAO,KAAc,KAAe,SAAuB;AAE5E,QAAM,aAAa,YAAAA,QAAK,QAAQ,cAAc;AAE9C,iBAAe,OAAO;AACpB,UAAM,MAAM,MAAO,yBAAG,MAAc,OAAO,OAAO;AAAA,MAChD,OAAO;AAAA,MACP,OAAO;AAAA,MACP,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,IAAI,UAAU;AACtB,UAAM,SAAS,OAAO,KAAK,MAAM,IAAI,YAAY,CAAC;AAClD,UAAM,UAAAC,QAAG,SAAS,UAAU,YAAY,MAAM;AAAA,EAChD;AACA,OAAK;AACP;",
  "names": ["path", "fs"]
}
